#include "clint.h"
module clint {
	reg mtimecmp_0_hi[32] = 0;
	reg mtimecmp_0_lo[32] = 0;
	wire mtimecmp_0[64];
	reg msip_0 = 0;
	reg mtime_hi[32] = 0;
	reg mtime_lo[32] = 0;
	wire mtime[64];
	wire mtime_n[64];
	func read {
		any {
			addr == 16'(CLINT_MSIP_ADDR_OFFSET + 0x0000): {rdata = 32'(msip_0); ready();}
			addr == 16'(CLINT_MTIMECMP_ADDR_OFFSET + 0x0000 + 0x0000): {rdata = mtimecmp_0_lo; ready();}
			addr == 16'(CLINT_MTIMECMP_ADDR_OFFSET + 0x0000 + 0x0004): {rdata = mtimecmp_0_hi; ready();}
			addr == 16'(CLINT_MTIME_ADDR_OFFSET + 0x0000): {{rdata = mtime_lo; ready();}}
			addr == 16'(CLINT_MTIME_ADDR_OFFSET + 0x0004): {{rdata = mtime_hi; ready();}}
			else: {rdata = 0x00000000; ready();}
		}
	}
	func write {
		any {
			addr == 16'(CLINT_MSIP_ADDR_OFFSET + 0x0000): {msip_0 := wdata[0]; ready();}
			addr == 16'(CLINT_MTIMECMP_ADDR_OFFSET + 000000 + 0x0000): {mtimecmp_0_lo := wdata; ready();}
			addr == 16'(CLINT_MTIMECMP_ADDR_OFFSET + 000000 + 0x0004): {mtimecmp_0_hi := wdata; ready();}
			addr == 16'(CLINT_MTIME_ADDR_OFFSET + 0x0000): {{mtime_lo := wdata; ready();}}
			addr == 16'(CLINT_MTIME_ADDR_OFFSET + 0x0004): {{mtime_hi := wdata; ready();}}
			else: {ready();}
		}
	}
	mtime = {mtime_hi, mtime_lo};
	mtime_n = mtime + 0x0000000000000001;
	if(!write) {mtime_hi := mtime_n[63:32]; mtime_lo := mtime_n[31:0];}
	mtimecmp_0 = {mtimecmp_0_hi, mtimecmp_0_lo};
	if(mtime >= mtimecmp_0) timer_interrupt_hart0();
	if(msip_0) software_interrupt_hart0();
}
