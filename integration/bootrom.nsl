#include "bootrom.h"
#include "opcode.h"

#ifndef CV
module bootrom {
	mem rom[4096][8];

	func reset {
		_readmemh("bootrom.hex", rom);
	}
	func read {
		any {
			byteen == MEM_WORD: rdata = {rom[{addr[11:2],2'b11}], rom[{addr[11:2],2'b10}], rom[{addr[11:2],2'b01}], rom[{addr[11:2],2'b00}]};
			byteen == MEM_HALFWORD: rdata = {0x0000, rom[{addr[11:2],2'b01}], rom[{addr[11:2],2'b00}]};
			byteen == MEM_BYTE: rdata = {0x000000, rom[{addr[11:2],2'b00}]};
		}
		ready();
	}
}

#else

#include "bootrom_bram.h"

module bootrom {
	rom_1p rom;

	rom.clock = m_clock;

	func read seq{
		rom.address = addr[11:2];
		{
			rdata = rom.q;
			ready();
		}
	}
}
#endif