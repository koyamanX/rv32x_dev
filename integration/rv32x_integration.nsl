#include "rv32x_integration.h"
#include "rv32x_mcore.h"
#include "opcode.h"
#include "bootrom.h"
#include "memory_map.h"

module rv32x_integration {
	rv32x_mcore rv32x;
	bootrom rom;

	func reset {
		rv32x.reset();
		rom.reset();
	}
	func dmem_valid {
		rv32x.rdata = rdata;
		rv32x.dmem_valid();
	}
	func imem_valid {
		rv32x.inst = inst;
		rv32x.imem_valid();
	}
	func rom.port1_valid {
		rv32x.inst = rom.port1_rdata;
		rv32x.imem_valid();
	}
	func rv32x.imem_read {
		any {
			/* BOOTROM_BASE <= rv32x.iaddr && */
			rv32x.iaddr < BOOTROM_BASE+BOOTROM_LENGTH:
				rom.port1_read((rv32x.iaddr-BOOTROM_BASE)[11:0]);
			else: imem_read(rv32x.iaddr, rv32x.ibyteen);
		}
	}
	func rv32x.dmem_read {
		any {
			else: dmem_read(rv32x.daddr, rv32x.dbyteen);
		}
	}
	func rv32x.dmem_write {
		any {
			else: dmem_write(rv32x.daddr, rv32x.dbyteen, rv32x.wdata);
		}
	}
	func rv32x.check_daddr {
		/* all location are mapped & cacheable for simulation purpose */
		rv32x.cacheable();
	}
#ifdef DEBUG
	debug_x0  = rv32x.debug_x0;
	debug_x1  = rv32x.debug_x1;
	debug_x2  = rv32x.debug_x2;
	debug_x3  = rv32x.debug_x3;
	debug_x4  = rv32x.debug_x4;
	debug_x5  = rv32x.debug_x5;
	debug_x6  = rv32x.debug_x6;
	debug_x7  = rv32x.debug_x7;
	debug_x8  = rv32x.debug_x8;
	debug_x9  = rv32x.debug_x9;
	debug_x10 = rv32x.debug_x10;
	debug_x11 = rv32x.debug_x11;
	debug_x12 = rv32x.debug_x12;
	debug_x13 = rv32x.debug_x13;
	debug_x14 = rv32x.debug_x14;
	debug_x15 = rv32x.debug_x15;
	debug_x16 = rv32x.debug_x16;
	debug_x17 = rv32x.debug_x17;
	debug_x18 = rv32x.debug_x18;
	debug_x19 = rv32x.debug_x19;
	debug_x20 = rv32x.debug_x20;
	debug_x21 = rv32x.debug_x21;
	debug_x22 = rv32x.debug_x22;
	debug_x23 = rv32x.debug_x23;
	debug_x24 = rv32x.debug_x24;
	debug_x25 = rv32x.debug_x25;
	debug_x26 = rv32x.debug_x26;
	debug_x27 = rv32x.debug_x27;
	debug_x28 = rv32x.debug_x28;
	debug_x29 = rv32x.debug_x29;
	debug_x30 = rv32x.debug_x30;
	debug_x31 = rv32x.debug_x31;
	debug_pc = rv32x.debug_pc;
	func rv32x.sim_done {
		sim_done(rv32x.tohost);
	}
	func rv32x.debug_retire {
		debug_retire(rv32x.debug_retire_pc, rv32x.debug_retire_inst);
	}
	func rv32x.debug_wb {
		debug_wb(rv32x.debug_wb_rd, rv32x.debug_wb_value);
	}
	func rv32x.debug_csr_write {
		debug_csr_write(rv32x.debug_csr_write_num, rv32x.debug_csr_write_data);
	}
	func rv32x.debug_mem_write {
		debug_mem_write(rv32x.debug_mem_adrs, rv32x.debug_mem_byteen, rv32x.debug_mem_data);
	}
	func rv32x.debug_raise_exception {
		debug_raise_exception(rv32x.debug_cause, rv32x.debug_epc, rv32x.debug_mtval);
	}
#endif
}
