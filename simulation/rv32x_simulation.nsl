#include "opcode.h"
#include "rv32x_integration.h"
declare rv32x_simulation simulation {
	func_in reset();
	input inst[32];
	input rdata[32];
	output wdata[32];
	output daddr[32];
	output iaddr[32];
	output ibyteen[3];
	output dbyteen[3];
	func_in dmem_valid;
	func_in imem_valid;
	func_out imem_read(iaddr, ibyteen);  
	func_out dmem_read(daddr, dbyteen);  
	func_out dmem_write(daddr, dbyteen, wdata); 
#ifdef DEBUG
	output tohost[32];
	func_out sim_done(tohost);
	output debug_x0[32];
	output debug_x1[32];
	output debug_x2[32];
	output debug_x3[32];
	output debug_x4[32];
	output debug_x5[32];
	output debug_x6[32];
	output debug_x7[32];
	output debug_x8[32];
	output debug_x9[32];
	output debug_x10[32];
	output debug_x11[32];
	output debug_x12[32];
	output debug_x13[32];
	output debug_x14[32];
	output debug_x15[32];
	output debug_x16[32];
	output debug_x17[32];
	output debug_x18[32];
	output debug_x19[32];
	output debug_x20[32];
	output debug_x21[32];
	output debug_x22[32];
	output debug_x23[32];
	output debug_x24[32];
	output debug_x25[32];
	output debug_x26[32];
	output debug_x27[32];
	output debug_x28[32];
	output debug_x29[32];
	output debug_x30[32];
	output debug_x31[32];
    output debug_pc[32];
	output debug_retire_inst[32];
	output debug_retire_pc[32];
	func_out debug_retire(debug_retire_pc, debug_retire_inst);
	output debug_wb_rd[5];
	output debug_wb_data[32];
	func_out debug_wb(debug_wb_rd, debug_wb_data);
	output debug_csr_write_num[12];
	output debug_csr_write_data[32];
	func_out debug_csr_write(debug_csr_write_num, debug_csr_write_data);
	output debug_mem_adrs[32];
	output debug_mem_data[32];
	output debug_mem_byteen[3];
	func_out debug_mem_write(debug_mem_adrs, debug_mem_byteen, debug_mem_data);
	output debug_cause[32];
	output debug_epc[32];
	output debug_mtval[32];
	func_out debug_raise_exception(debug_cause, debug_epc, debug_mtval);
#endif
}

module rv32x_simulation {
	rv32x_integration core;
	
	func reset {
		//core.reset(0x00000000);
		core.reset();
	}
	func core.imem_read {
		imem_read(core.iaddr, core.ibyteen);
	}
	func core.dmem_read {
		dmem_read(core.daddr, core.dbyteen);
	}
	func core.dmem_write {
		dmem_write(core.daddr, core.dbyteen, core.wdata);
	}
	func imem_valid {
		core.inst = inst;
		core.imem_valid();
	}
	func dmem_valid {
		core.rdata = rdata;
		core.dmem_valid();
	}
#ifdef DEBUG
	func core.sim_done {
		sim_done(core.tohost);
	}
	debug_x0  = core.debug_x0;
	debug_x1  = core.debug_x1;
	debug_x2  = core.debug_x2;
	debug_x3  = core.debug_x3;
	debug_x4  = core.debug_x4;
	debug_x5  = core.debug_x5;
	debug_x6  = core.debug_x6;
	debug_x7  = core.debug_x7;
	debug_x8  = core.debug_x8;
	debug_x9  = core.debug_x9;
	debug_x10 = core.debug_x10;
	debug_x11 = core.debug_x11;
	debug_x12 = core.debug_x12;
	debug_x13 = core.debug_x13;
	debug_x14 = core.debug_x14;
	debug_x15 = core.debug_x15;
	debug_x16 = core.debug_x16;
	debug_x17 = core.debug_x17;
	debug_x18 = core.debug_x18;
	debug_x19 = core.debug_x19;
	debug_x20 = core.debug_x20;
	debug_x21 = core.debug_x21;
	debug_x22 = core.debug_x22;
	debug_x23 = core.debug_x23;
	debug_x24 = core.debug_x24;
	debug_x25 = core.debug_x25;
	debug_x26 = core.debug_x26;
	debug_x27 = core.debug_x27;
	debug_x28 = core.debug_x28;
	debug_x29 = core.debug_x29;
	debug_x30 = core.debug_x30;
	debug_x31 = core.debug_x31;
	debug_pc = core.debug_pc;
	func core.debug_retire {
		debug_retire(core.debug_retire_pc, core.debug_retire_inst);
	}
	func core.debug_wb {
		debug_wb(core.debug_wb_rd, core.debug_wb_value);
	}
	func core.debug_csr_write {
		debug_csr_write(core.debug_csr_write_num, core.debug_csr_write_data);
	}
	func core.debug_mem_write {
		debug_mem_write(core.debug_mem_adrs, core.debug_mem_byteen, core.debug_mem_data);
	}
	func core.debug_raise_exception {
		debug_raise_exception(core.debug_cause, core.debug_epc, core.debug_mtval);
	}
#endif
}
