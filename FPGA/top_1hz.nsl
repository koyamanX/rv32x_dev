#include "top_bram.h"

declare downclock interface{
    input m_clock;
    input p_reset;

    output SCLK;
    input MISO;
    output MOSI;
    output CS;
    input RXD;
    output TXD;
    output LEDR[10];
    output HEX0[7];
    output HEX1[7];
    output HEX2[7];
    output HEX3[7];
    output HEX4[7];
    output HEX5[7];
    input SW[10];
}

module downclock{
    top_bram core;

	TXD = core.TXD;
	core.RXD = RXD;
	MOSI = core.MOSI;
	SCLK = core.SCLK;
	CS = core.CS;
	core.MISO = MISO;
	LEDR = core.LEDR;
    HEX0 = core.HEX0;
    HEX1 = core.HEX1;
    HEX2 = core.HEX2;
    HEX3 = core.HEX3;
    HEX4 = core.HEX4;
    HEX5 = core.HEX5;
    core.SW = SW;
}

declare top_1hz{
    
    output SCLK;
    input MISO;
    output MOSI;
    output CS;
    input RXD;
    output TXD;
    output LEDR[10];
    output HEX0[7];
    output HEX1[7];
    output HEX2[7];
    output HEX3[7];
    output HEX4[7];
    output HEX5[7];
    input SW[10];
}

module top_1hz{
    reg cnt[26];
    reg clock1hz = 0;
    downclock core;

    core.m_clock = clock1hz;
    core.p_reset = p_reset;

	TXD = core.TXD;
	core.RXD = RXD;
	MOSI = core.MOSI;
	SCLK = core.SCLK;
	CS = core.CS;
	core.MISO = MISO;
	LEDR = core.LEDR;
    HEX0 = core.HEX0;
    HEX1 = core.HEX1;
    HEX2 = core.HEX2;
    HEX3 = core.HEX3;
    HEX4 = core.HEX4;
    HEX5 = core.HEX5;
    core.SW = SW;

    if(cnt == 12500000){
        cnt := 0;
        clock1hz := ~ clock1hz ;
    }else{
        cnt++;
    }

}

