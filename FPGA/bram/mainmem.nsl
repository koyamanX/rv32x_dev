#include "mainmem.h"

declare altsyncram interface {
    param_int
        widthad_a,
        width_a,
        width_byteena_a,
        numwords_a;
    param_str
        clock_enable_input_a,
        clock_enable_output_a,
        intended_device_family,
        lpm_hint,
        lpm_type,
        init_file,
        operation_mode,
        outdata_aclr_a,
        outdata_reg_a,
        power_up_uninitialized,
        read_during_write_mode_port_a;
    input address_a[13];
    input clock0;
    input data_a[8];
    input wren_a;
    output q_a[8];
    input aclr0;
    input aclr1;
    input address_b[14];
    input addressstall_a;
    input addressstall_b;
    input byteena_a;
    input byteena_b;
    input clock1;
    input clocken0;
    input clocken1;
    input clocken2;
    input clocken3;
    input data_b[8];
    output eccstatus;
    output q_b[8];
    input rden_a;
    input rden_b;
    input wren_b;
}

module mainmem {
	wire sub_wire0[8];
    integer i;
	
	altsyncram	altsyncram_component (
	    widthad_a = 13,
        width_a = 8, 
        width_byteena_a = 1,
		numwords_a = 8192,
		clock_enable_input_a = "BYPASS",
		clock_enable_output_a = "BYPASS",
		intended_device_family = "Cyclone V",
        init_file = "DEADBEEF",
		lpm_hint = "ENABLE_RUNTIME_MOD=NO",
		lpm_type = "altsyncram",
		operation_mode = "SINGLE_PORT",
		outdata_aclr_a = "NONE",
		outdata_reg_a = "UNREGISTERED",
		power_up_uninitialized = "FALSE",
		read_during_write_mode_port_a = "DONT_CARE");

	q = sub_wire0;

	altsyncram_component.address_a=address;
	altsyncram_component.clock0=clock;
	altsyncram_component.data_a=data;
	altsyncram_component.wren_a=wren;
	altsyncram_component.aclr0=1'b0;
	altsyncram_component.aclr1=1'b0;
	altsyncram_component.address_b=1'b1;
	altsyncram_component.addressstall_a=1'b0;
	altsyncram_component.addressstall_b=1'b0;
	altsyncram_component.byteena_a=1'b1;
	altsyncram_component.byteena_b=1'b1;
	altsyncram_component.clock1=1'b1;
	altsyncram_component.clocken0=1'b1;
	altsyncram_component.clocken1=1'b1;
	altsyncram_component.clocken2=1'b1;
	altsyncram_component.clocken3=1'b1;
	altsyncram_component.data_b=1'b1;
	altsyncram_component.rden_a=1'b1;
	altsyncram_component.rden_b=1'b1;
	altsyncram_component.wren_b=1'b0;

	sub_wire0=altsyncram_component.q_a;
}
